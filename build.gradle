plugins {
  id "com.github.johnrengelman.shadow" version "6.1.0"
  id "io.micronaut.application" version '1.0.3'
}

version "0.1"
group "example.micronaut"

repositories {
  mavenCentral()
  jcenter()
}

configurations {
  // for dependencies that are needed for development only
  developmentOnly
}

java {
  sourceCompatibility = JavaVersion.toVersion('11')
  targetCompatibility = JavaVersion.toVersion('11')
}

dependencies {
  annotationProcessor(platform("io.micronaut:micronaut-bom:$micronautVersion"))
  compileOnly 'org.projectlombok:lombok:1.18.12'
  annotationProcessor "org.projectlombok:lombok:1.18.12"
  annotationProcessor("io.micronaut:micronaut-inject-java")
  annotationProcessor("io.micronaut:micronaut-validation")
  annotationProcessor("io.micronaut:micronaut-graal")
  annotationProcessor("io.micronaut.data:micronaut-data-processor")
  implementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
  implementation("io.micronaut:micronaut-validation")
  implementation("io.micronaut:micronaut-inject")
  implementation("io.micronaut:micronaut-runtime")
  implementation("io.micronaut:micronaut-http-server-netty")
  implementation("io.micronaut.sql:micronaut-jdbc-hikari")
  implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
  implementation("io.micronaut.sql:micronaut-hibernate-jpa")

  compileOnly(platform("io.micronaut:micronaut-bom:$micronautVersion"))
  compileOnly("org.graalvm.nativeimage:svm")
  runtimeOnly "org.postgresql:postgresql:42.2.13"
//  compile ("mysql:mysql-connector-java")
  runtimeOnly("ch.qos.logback:logback-classic")

  testAnnotationProcessor(platform("io.micronaut:micronaut-bom:$micronautVersion"))
  testAnnotationProcessor("io.micronaut:micronaut-inject-java")
  testImplementation(platform("io.micronaut:micronaut-bom:$micronautVersion"))
  testImplementation("org.junit.jupiter:junit-jupiter-api")
  testImplementation("io.micronaut.test:micronaut-test-junit5")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

test.classpath += configurations.developmentOnly
// use JUnit 5 platform
test {
  useJUnitPlatform()
}

mainClassName = "example.micronaut.config.Application"
micronaut {
  runtime "netty"
  testRuntime "junit5"
  processing {
    incremental true
    annotations "example.micronaut.*"
  }
}

nativeImage {
  imageName('os-hibernate')
}





